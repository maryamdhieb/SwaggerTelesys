{
  "openapi": "3.0.4",
  "info": {
    "title": "TELESYS API",
    "version": "1.0.12"
  },
  "servers": [
    {
      "url": "http://41.230.48.11:4800"
    }
  ],

  "components": {
    "securitySchemes": {
      "bearerAuth1": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token pour l'authentification. "
      },
      "bearerAuth2": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token d’accès pour consommer les API de récupération de données."
      }
    }
  },

  "paths": {
    "/T6/Authentification": {
      "post": {
        "tags": ["Authentification"],
        "summary": "Récupérer Token",
        "description": "Retourne un token à partir des informations utilisateur.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Utilisateur": {
                    "type": "string",
                    "description": "Nom de l'utilisateur"
                  },
                  "Login": {
                    "type": "string",
                    "description": "Identifiant"
                  },
                  "Pass": {
                    "type": "string",
                    "description": "Mot de passe"
                  }
                },
                "required": ["Utilisateur", "Login", "Pass"]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth1": []
          }
        ],
        "responses": {
          "200": {
            "description": "Authentification réussie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Token": {
                      "type": "string"
                    },
                    "DateExpT": {
                      "type": "string"
                    },
                    "HeureExpT": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Utilisateur non trouvé"
          }
        }
      }
    },
    "/T6/Agent/{Multi}/{Agent}": {
      "get": {
        "tags": ["Agent"],
        "summary": "Récupérer un agent",
        "description": "Cette méthode récupère un agent en fonction du paramètre de chemin `multi`.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "Agent",
            "in": "path",
            "description": "Identifiant de l'agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'agent trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Agent": {
                      "type": "string"
                    },
                    "NomAgent": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Agent non trouvé"
          }
        }
      }
    },
    "/T6/Client/{Multi}/{NC}": {
      "get": {
        "tags": ["Client"],
        "summary": "Récupérer un client",
        "description": "Cette méthode récupère un client en fonction du paramètre de chemin `Multi` et `NC`.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NC",
            "in": "path",
            "description": "Identifiant du client",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du client trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "NC": {
                      "type": "string"
                    },
                    "Lib": {
                      "type": "string"
                    },
                    "MF": {
                      "type": "string"
                    },
                    "Adr1": {
                      "type": "string"
                    },
                    "Adr2": {
                      "type": "string"
                    },
                    "Mail": {
                      "type": "string"
                    },
                    "Tel": {
                      "type": "string"
                    },
                    "Activite": {
                      "type": "string"
                    },
                    "Resp": {
                      "type": "string"
                    },
                    "Type": {
                      "type": "string"
                    },
                    "Transporetur": {
                      "type": "string"
                    },
                    "LibTransporteur": {
                      "type": "string"
                    },
                    "PaiementClt": {
                      "type": "string"
                    },
                    "LivraisonClt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "client non trouvé"
          }
        }
      }
    },
    "/T6/Transporteur/{Multi}": {
      "post": {
        "tags": ["Transporteur"],
        "summary": "Vérification des transporteurs",
        "description": "Retourne `true` si tous les transporteurs existent, sinon retourne ceux qui sont incorrects.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transporters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idErp": {
                          "type": "string",
                          "example": "0001"
                        },
                        "name": {
                          "type": "string",
                          "example": "transp1"
                        }
                      },
                      "required": ["idErp", "name"]
                    }
                  }
                },
                "required": ["transporters"]
              },
              "example": {
                "transporters": [
                  { "idErp": "0001", "name": "transp1" },
                  { "idErp": "0002", "name": "transp2" }
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Résultat de la vérification",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "boolean",
                      "example": true
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "idErp": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "example": [{ "idErp": "0003", "name": "transpInvalide" }]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/T6/Magasin/{Multi}": {
      "get": {
        "tags": ["Magasin"],
        "summary": "Récupérer le code magasin",
        "description": "Cette méthode récupère le code magasin en fonction du paramètre de chemin `multi`.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de la magasin trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Mg": {
                      "type": "string"
                    },
                    "LibMg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Magasin non trouvé"
          }
        }
      }
    },
    "/T6/Article/{Multi}/{Mg}/{Ref}": {
      "get": {
        "tags": ["Article"],
        "summary": "Récupérer un article",
        "description": "Cette méthode récupère un article en fonction du paramètre de chemin `Multi` , `Mg` et `Ref`.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Mg",
            "in": "path",
            "description": "Code Magasin",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ref",
            "in": "path",
            "description": "Code Référence",
            "required": false,
            "value": "*",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'article trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Mg": {
                      "type": "string"
                    },
                    "Ref": {
                      "type": "string"
                    },
                    "Desi": {
                      "type": "string"
                    },
                    "PU": {
                      "type": "number",
                      "format": "float"
                    },
                    "PUHT2": {
                      "type": "number",
                      "format": "float"
                    },
                    "PUHT3": {
                      "type": "number",
                      "format": "float"
                    },
                    "TVA": {
                      "type": "number",
                      "format": "float"
                    },
                    "Fa": {
                      "type": "array",
                      "description": "Liste des sous-familles",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Fa": {
                            "type": "string",
                            "description": "Identifiant de la sous-famille"
                          },
                          "LibFa": {
                            "type": "string",
                            "description": "Libellé de la sous-famille"
                          }
                        }
                      }
                    },
                    "Fa1": {
                      "type": "array",
                      "description": "Liste des sous-familles 1",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Fa1": {
                            "type": "string",
                            "description": "Identifiant de la sous-famille 1"
                          },
                          "LibFa1": {
                            "type": "string",
                            "description": "Libellé de la sous-famille 1"
                          }
                        }
                      }
                    },
                    "Fa2": {
                      "type": "array",
                      "description": "Liste des sous-familles 2",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Fa2": {
                            "type": "string",
                            "description": "Identifiant de la sous-famille 2"
                          },
                          "LibFa2": {
                            "type": "string",
                            "description": "Libellé de la sous-famille 2"
                          }
                        }
                      }
                    },
                    "Fa3": {
                      "type": "array",
                      "description": "Liste des sous-familles 3",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Fa3": {
                            "type": "string",
                            "description": "Identifiant de la sous-famille 3"
                          },
                          "LibFa3": {
                            "type": "string",
                            "description": "Libellé de la sous-famille 3"
                          }
                        }
                      }
                    },
                    "Qt": {
                      "type": "number",
                      "format": "float"
                    },
                    "TotalQt": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Article non trouvé"
          }
        }
      }
    },
    "/T6/ArticleFichTech/{Multi}/{Mg}/{Ref}": {
      "get": {
        "tags": ["Article"],
        "summary": "Récupérer un article du fiche technique",
        "description": "Cette méthode récupère un article en fonction du paramètre de chemin `Multi` , `Mg` et `Ref` .",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Mg",
            "in": "path",
            "description": "Code Magasin",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ref",
            "in": "path",
            "description": "Code Référence",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'article trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Mg": {
                      "type": "string"
                    },
                    "Ref": {
                      "type": "string"
                    },
                    "FileDoss": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Article non trouvé"
          }
        }
      }
    },
    "/T6/ArticleImage/{Multi}/{Mg}/{Ref}": {
      "get": {
        "tags": ["Article"],
        "summary": "Récupérer un article image",
        "description": "Cette méthode récupère un article en fonction du paramètre de chemin `Multi` , `Mg` et `Ref` .",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Mg",
            "in": "path",
            "description": "Code Magasin",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ref",
            "in": "path",
            "description": "Code Référence",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'article trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Mg": {
                      "type": "string"
                    },
                    "Ref": {
                      "type": "string"
                    },
                    "FileDoss": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Article non trouvé"
          }
        }
      }
    },

    "/T6/Famille/{Multi}": {
      "get": {
        "tags": ["Famille et SousFamille"],
        "summary": "Récupérer une famille",
        "description": "Cette méthode récupère une famille en fonction du paramètre de chemin `Multi`.",

        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du famille trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Fa": {
                      "type": "string"
                    },
                    "LibFa": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Famille non trouvé"
          }
        }
      }
    },

    "/T6/SousFamille1/{Multi}": {
      "get": {
        "tags": ["Famille et SousFamille"],
        "summary": "Récupérer une sous famille 1",
        "description": "Cette méthode récupère une sous famille 1 en fonction du paramètre de chemin `Multi`.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du sous famille 1 trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Fa1": {
                      "type": "string"
                    },
                    "LibFa1": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Sous Famille 1 non trouvé"
          }
        }
      }
    },
    "/T6/SousFamille2/{Multi}": {
      "get": {
        "tags": ["Famille et SousFamille"],
        "summary": "Récupérer une sous famille 2",
        "description": "Cette méthode récupère une sous famille 2 en fonction du paramètre de chemin `Multi`.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du sous famille 2 trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Fa2": {
                      "type": "string"
                    },
                    "LibFa2": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Sous Famille 2 non trouvé"
          }
        }
      }
    },

    "/T6/SousFamille3/{Multi}": {
      "get": {
        "tags": ["Famille et SousFamille"],
        "summary": "Récupérer une sous famille 3",
        "description": "Cette méthode récupère une sous famille 3 en fonction du paramètre de chemin `Multi`.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du sous famille 3 trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Fa3": {
                      "type": "string"
                    },
                    "LibFa3": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Sous Famille 3 non trouvé"
          }
        }
      }
    },
    "/T6/SousFamille3Detail/{Multi}/{Ref}": {
      "get": {
        "tags": ["Famille et SousFamille"],
        "summary": "Récupérer une sous famille 3",
        "description": "Cette méthode récupère une sous famille 3 en fonction du paramètre de chemin `Multi`.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "Ref",
            "in": "path",
            "description": "Code Référence",
            "required": true,
            "value": "*",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du sous famille 3 trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Fa3": {
                      "type": "string",
                      "description": "Identifiant de la sous-famille 3"
                    },
                    "LibFa3": {
                      "type": "string",
                      "description": "Libellé de la sous-famille 3"
                    },
                    "Variations": {
                      "type": "array",
                      "description": "Liste des variations associées à la sous-famille 3",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Fa": {
                            "type": "string",
                            "description": "Identifiant de la variation"
                          },
                          "LibFa": {
                            "type": "string",
                            "description": "Libellé de la variation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Sous Famille 3 Detail non trouvé"
          }
        }
      }
    },
    "/T6/DevisRecu": {
      "post": {
        "tags": ["Devis"],
        "summary": "Envoyer un devis au ERP",
        "description": "Cette méthode envoie le devis à ERP.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "numDevis": {
                    "type": "string",
                    "description": "Identifiant du devis",
                    "example": "DVERP0033"
                  },
                  "dateDevis": {
                    "type": "string",
                    "description": "Date de la création du devis",
                    "example": "20250617"
                  },
                  "NC": {
                    "type": "string",
                    "description": "Code client",
                    "example": "00000001"
                  },
                  "libNC": {
                    "type": "string",
                    "description": "Nom du client",
                    "example": "BUSINESS SOFT"
                  },
                  "Agent": {
                    "type": "string",
                    "description": "Code de l'agent",
                    "example": "000003"
                  },
                  "libAgent": {
                    "type": "string",
                    "description": "Nom de l'agent",
                    "example": "OMAR REKIK"
                  },
                  "deliveryAddress": {
                    "type": "string",
                    "description": "Adresse de livraison",
                    "example": "RTE LAFRANE IMMEUBLE SAMIRA PALACE"
                  },
                  "useDefaultAddress": {
                    "type": "boolean",
                    "description": "Utiliser l'adresse par défaut",
                    "example": true
                  },
                  "deliveryMethod": {
                    "type": "string",
                    "description": "Méthode de livraison",
                    "example": "1"
                  },
                  "carrierId": {
                    "type": "string",
                    "description": "Identifiant transporteur",
                    "example": "0001"
                  },
                  "agencyId": {
                    "type": "string",
                    "description": "Identifiant agence",
                    "example": "001"
                  },
                  "deliveryDate": {
                    "type": "string",
                    "description": "Date de livraison",
                    "example": "20250620153000"
                  },
                  "role": {
                    "type": "string",
                    "description": "Rôle utilisateur",
                    "example": "2"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Commentaire du devis",
                    "example": "Livraison urgente demandée."
                  },
                  "products": {
                    "type": "array",
                    "description": "Liste des produits",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Mg": {
                          "type": "string",
                          "description": "Code magasin",
                          "example": "001"
                        },
                        "idProduct": {
                          "type": "string",
                          "description": "Identifiant produit",
                          "example": "10012"
                        },
                        "qty": {
                          "type": "number",
                          "description": "Quantité demandée",
                          "example": 10
                        },
                        "price": {
                          "type": "number",
                          "description": "Prix unitaire",
                          "example": 25.5
                        },
                        "Re1": {
                          "type": "number",
                          "description": "Remise 1",
                          "example": 5
                        },
                        "Re2": {
                          "type": "number",
                          "description": "Remise 2",
                          "example": 10
                        }
                      },
                      "required": ["Mg", "idProduct", "qty", "price"]
                    }
                  }
                },
                "required": [
                  "numDevis",
                  "dateDevis",
                  "NC",
                  "Agent",
                  "deliveryAddress",
                  "products"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails devis trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "NumDevis": {
                      "type": "string",
                      "description": "NumDevis dans ERP"
                    },
                    "NumDevisWeb": {
                      "type": "string",
                      "description": "NumDevisWeb dans le site"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Devis non trouvé"
          }
        }
      }
    },

    "/T6/DevisEnvoie/{Multi}/{NumDevis}": {
      "get": {
        "tags": ["Devis"],
        "summary": "Récupérer le devis",
        "description": "Cette méthode récupère le devis.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "NumDevis",
            "in": "path",
            "description": "NumDevis dans ERP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du devis trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "NumDevis": {
                      "type": "string",
                      "description": "Identifiant du devis dans ERP"
                    },
                    "NumDevisWeb": {
                      "type": "string",
                      "description": "Identifiant du devis dans le site"
                    },
                    "DA": {
                      "type": "string",
                      "description": "Date de la création du devis"
                    },
                    "NC": {
                      "type": "string",
                      "description": "Identifiant du client"
                    },
                    "Lib": {
                      "type": "string",
                      "description": "libellé du client"
                    },
                    "Agent": {
                      "type": "string",
                      "description": "Identifiant de l'agent"
                    },
                    "LibAgent": {
                      "type": "string",
                      "description": "libellé de l'agent"
                    },
                    "Adresse": {
                      "type": "string",
                      "description": "Adresse du client"
                    },
                    "Transporetur": {
                      "type": "string",
                      "description": "Identifiant du transporteur"
                    },
                    "LibTransporteur": {
                      "type": "string",
                      "description": "libellé de la transporteur"
                    },

                    "AdrLiv": {
                      "type": "string",
                      "description": "Adresse de la livraison"
                    },
                    "DelaiDate": {
                      "type": "string",
                      "description": "Delai de la livraison"
                    },
                    "DelaiHeure": {
                      "type": "string",
                      "description": "Heure de la livraison"
                    },
                    "MtHt": {
                      "type": "number",
                      "description": "Montant Hors taxe"
                    },
                    "MtTTCSansRemise": {
                      "type": "number",
                      "description": "Montant TTC sans remise"
                    },
                    "Mttc": {
                      "type": "number",
                      "description": "Montant TTC"
                    },
                    "EtatVente": {
                      "type": "string",
                      "description": "Statut de vente"
                    },

                    "Article": {
                      "type": "array",
                      "description": "Liste des articles ",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Mg": {
                            "type": "string",
                            "description": "Code Magasin"
                          },
                          "Ref": {
                            "type": "string",
                            "description": "Code Référence"
                          },
                          "Desi": {
                            "type": "string",
                            "description": "Libellé de l'article "
                          },
                          "Qte": {
                            "type": "string",
                            "description": "Quatité demander"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Devis non trouvé"
          }
        }
      }
    },
    "/T6/DevisImprime/{Multi}/{NumDevis}": {
      "get": {
        "tags": ["Devis"],
        "summary": "Imprimer un devis",
        "description": "Cette API retourne un fichier PDF du devis demandé.",
        "security": [{ "bearerAuth2": [] }],
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "NumDevis",
            "in": "path",
            "description": "NumDevis dans ERP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fichier PDF du devis",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "pdf",
                  "format": "pdf"
                }
              }
            }
          },
          "404": {
            "description": "Devis non trouvé"
          }
        }
      }
    },

    "/T6/DevisAnnule/{Multi}": {
      "put": {
        "tags": ["Devis"],
        "summary": "Annuler un devis",
        "description": "Cette méthode permet d'annuler un devis.",
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "NumDevis": {
                    "type": "string",
                    "description": "Identifiant du devis dans ERP",
                    "example": "20252010000017"
                  },
                  "NumDevisWeb": {
                    "type": "string",
                    "description": "Identifiant du devis dans le site",
                    "example": "DVER7777"
                  }
                },
                "required": ["NumDevis", "NumDevisWeb"]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Etat du devis (annulé ou pas)",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Paramètre manquant ou invalide"
          },
          "404": {
            "description": "Devis non trouvé"
          }
        }
      }
    },
    "/T6/BonCommande": {
      "put": {
        "tags": ["BonCommande"],
        "summary": "Créer Bon de Commande",
        "description": "Cette API permet de générer un bon de commande à partir d'un devis.",
        "security": [{ "bearerAuth2": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Multi": {
                    "type": "string",
                    "example": "000001"
                  },
                  "NumDevis": {
                    "type": "string",
                    "example": "20252010000033"
                  }
                },
                "required": ["Multi", "NumDevis"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bon de commande généré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "NumBCom": {
                        "type": "string"
                      },
                      "NumDevis": {
                        "type": "string"
                      },
                      "NumDevisWeb": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/T6/BonLivraison/{Multi}/{NumBonCommande}/{NumDevisWeb}": {
      "get": {
        "tags": ["BonLivraison"],
        "summary": "Récupérer les informations du Bon de livraison",
        "description": "Cette API retourne la statut de vente cu commande web.",
        "security": [{ "bearerAuth2": [] }],
        "parameters": [
          {
            "name": "Multi",
            "in": "path",
            "description": "Identifiant de la société",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NumBonCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Numéro du BonCommande dans ERP"
          },
          {
            "name": "NumDevisWeb",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Numéro du devis sur le site"
          }
        ],
        "responses": {
          "200": {
            "description": "Bon de livraison généré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "NumBCom": {
                      "type": "string"
                    },
                    "NumDevisWeb": {
                      "type": "string"
                    },
                    "NumBL": {
                      "type": "string"
                    },
                    "EtatVente": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "BL non trouvé"
          }
        }
      }
    }
  }
}
